@use 'sass:map';

$containers: (
  sm: 360px,
  smp: 480px,
  md: 768px,
  lg: 1100px,
  hd: 1440px,
  '4k': 2560px
);

$commonSizes: (
  bar: 60px,
  tile: 80px,
  sidenav: 240px,
  spanel: 260px,
  mpanel: 320px,
  panel: 360px
);

$spacing: (
  px: 1px,
  xxs: 3px,
  xs: 5px,
  sm: 10px,
  md: 15px,
  lg: 20px,
  xl: 25px,
);

@mixin c($min, $max: null) {
  @if $min and $max {
    @container (min-width: #{map.get($containers, $min)}) and (max-width: #{map.get($containers, $max)}) {
      @content;
    }
  } @else if $min {
    @container (min-width: #{map.get($containers, $min)}) {
      @content;
    }
  } @else if $max {
    @container (max-width: #{map.get($containers, $max)}) {
      @content;
    }
  }
}

@mixin m($min, $max: null) {
  @if $min and $max {
    @media (min-width: #{map.get($containers, $min)}) and (max-width: #{map.get($containers, $max)}) {
      @content;
    }
  } @else if $min {
    @media (min-width: #{map.get($containers, $min)}) {
      @content;
    }
  } @else if $max {
    @media (max-width: #{map.get($containers, $max)}) {
      @content;
    }
  }
}


%zn-pad {
  padding: map.get($spacing, xs);

  @include c(smp) {
    padding: map.get($spacing, sm);
  }

  @include c(md) {
    padding: map.get($spacing, md);
  }

  @include c(lg) {
    padding: map.get($spacing, lg);
  }
}

%zn-gap {
  gap: map.get($spacing, xxs);

  @include c(smp) {
    gap: map.get($spacing, sm);
  }

  @include c(md) {
    gap: map.get($spacing, md);
  }

  @include c(lg) {
    gap: map.get($spacing, lg);
  }
}


%scrollbars {
  @include m(md) {
    ::-webkit-scrollbar {
      width: 5px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
      background: transparent;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
      background: rgba(0, 0, 0, 0.05);
      border-radius: 5px;
    }

    /* Handle on hover */
    ::-webkit-scrollbar-thumb:hover {
      background: rgba(0, 0, 0, 0.2);
    }
  }
}
