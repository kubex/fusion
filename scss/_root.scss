@use "sass:map";
@use "variables";

$var-prefix: '--zn-';

@function hex-to-rgb($color) {
  @return red($color), green($color), blue($color);
}

$brand-colours: (
  'red': hex-to-rgb(#ED546D),
  'blue': hex-to-rgb(#6483F2),
  'green': hex-to-rgb(#2BC0C0),
  'orange': hex-to-rgb(#FF8800),
  'primary': hex-to-rgb(#6836F5),
  'accent': hex-to-rgb(#47D6D6),
);

$brand-colours-dark: (
  'primary': hex-to-rgb(#8967ef),
);

// Global Colors
$theme-colors: (
  'info': map.get($brand-colours, 'blue'),
  'warning': map.get($brand-colours, 'orange'),
  'error': map.get($brand-colours, 'red'),
  'success': map.get($brand-colours, 'green'),
);

// Light Theme
$theme-light: (
  'text': hex-to-rgb(#7F8090),
  'text-heading': hex-to-rgb(#343434),
  'text-page-title': hex-to-rgb(#343434),
  'text-panel-title': map.get($brand-colours, 'primary'),
  'body': hex-to-rgb(#F8F7FB),
  'shadow': hex-to-rgb(#ECE9F1),
  'panel': hex-to-rgb(#FFFFFF),
  'panel-highlight': hex-to-rgb(#f8f9fc),
  'border-color': hex-to-rgb(#E0DDE9),
  'input-bg': hex-to-rgb(#f7f7f7),
  'bright-bg': hex-to-rgb(#ffffff),

  'light-text': hex-to-rgb(#7B7097),
  'dark-text': hex-to-rgb(#382768),
  'purple-text': hex-to-rgb(#6836F5),
);

// Dark theme
$theme-dark: (
  'text': hex-to-rgb(#999999),
  'text-heading': hex-to-rgb(#E1E1E1),
  'text-page-title': hex-to-rgb(#E1E1E1),
  'text-panel-title': map.get($brand-colours-dark, 'primary'),
  'body': hex-to-rgb(#121212),
  'panel': hex-to-rgb(#1E1E1E),
  'panel-highlight': hex-to-rgb(#2E2E2E),
  'border-color': hex-to-rgb(#2E2E2E),
  'input-bg': hex-to-rgb(#121212),
  'bright-bg': hex-to-rgb(#e1e1e1),
  'light-text': hex-to-rgb(#7B7097),
  'dark-text': hex-to-rgb(#382768),
  'purple-text': hex-to-rgb(#6836F5),
);

@mixin spread-map($map: (), $pre: '') {
  @if type-of($map) != 'map' {
    @error 'spread-map() only works with maps';
  }

  @each $key, $value in $map {
    #{$pre}#{$key}: #{$value};
  }
}

:root {
  // Theme Colors
  @include spread-map($brand-colours, #{$var-prefix});
  @include spread-map($theme-colors, #{$var-prefix} + 'color-');
  @include spread-map(variables.$common-sizes, #{$var-prefix} + 'size-');

  // Font Families
  #{$var-prefix}font-family-sans: 'Roboto', sans-serif;
  #{$var-prefix}font-family-serif: 'Roboto Slab', serif;
  #{$var-prefix}font-family-mono: 'Roboto Mono', monospace;

  // Default Opacities
  #{$var-prefix}bg-opacity: 1;
  #{$var-prefix}text-opacity: 1;
}

[t="light"], .theme-light {
  @include spread-map($theme-light, #{$var-prefix});
}

[t="dark"], .theme-dark {
  @include spread-map($theme-dark, #{$var-prefix});
  @include spread-map($brand-colours-dark, #{$var-prefix});
}
