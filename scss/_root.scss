@use "sass:map";
@use "variables";

$var-prefix: '--zn-';

@function hex-to-rgb($color) {
  @return red($color), green($color), blue($color);
}

$brand-colours: (
  'red': hex-to-rgb(#ED546D),
  'blue': hex-to-rgb(#6483F2),
  'green': hex-to-rgb(#2BC0C0),
  'orange': hex-to-rgb(#FF8800),

  'primary': hex-to-rgb(#6836F5),
  'accent': hex-to-rgb(#47D6D6),
);

// Global Colors
$theme-colors: (
  'primary': map.get($brand-colours, 'primary'),
  'secondary': map.get($brand-colours, 'accent'),
  'tertiary': map.get($brand-colours, 'red'),
  'info': map.get($brand-colours, 'blue'),
  'warning': map.get($brand-colours, 'orange'),
  'error': map.get($brand-colours, 'red'),
  'success': map.get($brand-colours, 'green'),
);

// Default Theme
$theme-default: (
  'text': hex-to-rgb(#D3C9EE),
  'text-heading': hex-to-rgb(#FFFFFF),
  'text-page-title': hex-to-rgb(#FFFFFF),
  'text-panel-title': hex-to-rgb(#3CD8BB),
  'body': hex-to-rgb(#150B33),
  'panel': hex-to-rgb(#2A1A55),
  'panel-highlight': hex-to-rgb(#09112c),
  'border-color': hex-to-rgb(#080C1C),
  'accent': hex-to-rgb(#29C1BC),
  'input-bg': hex-to-rgb(#150c38),
  'bright-bg': hex-to-rgb(#e9dffd),
);

// Light Theme
$theme-light: (
  'text': hex-to-rgb(map.get(variables.$slate, 500)),
  'text-heading': hex-to-rgb(map.get(variables.$slate, 800)),
  'text-page-title': '52, 52, 52',
  'text-panel-title': hex-to-rgb(#6836F5),
  'body': hex-to-rgb(map.get(variables.$slate, 50)),
  'panel': hex-to-rgb(variables.$white),
  'panel-highlight': hex-to-rgb(#f8f9fc),
  'border-color': hex-to-rgb(map.get(variables.$slate, 300)),
  'accent': hex-to-rgb(#6836F5),
  'input-bg': hex-to-rgb(#f7f7f7),
  'bright-bg': hex-to-rgb(#ffffff),
);

// Dark theme
$theme-dark: (
  'text': hex-to-rgb(#999999),
  'text-heading': hex-to-rgb(#E1E1E1),
  'text-page-title': hex-to-rgb(#E1E1E1),
  'text-panel-title': hex-to-rgb(#29C1BC),
  'body': hex-to-rgb(#121212),
  'panel': hex-to-rgb(#181818),
  'panel-highlight': hex-to-rgb(#2E2E2E),
  'border-color': hex-to-rgb(#141624),
  'accent': hex-to-rgb(#29C1BC),
  'input-bg': hex-to-rgb(map.get(variables.$slate, 700)),
  'bright-bg': hex-to-rgb(#e1e1e1),
);

@mixin spread-map($map: (), $pre: '') {
  @if type-of($map) != 'map' {
    @error 'spread-map() only works with maps';
  }

  @each $key, $value in $map {
    #{$pre}#{$key}: #{$value};
  }
}

:root {
  // Theme Colors
  @include spread-map($theme-colors, #{$var-prefix} + 'color-');
  @include spread-map($theme-default, #{$var-prefix});

  // Font Families
  #{$var-prefix}font-family-sans: 'Roboto', sans-serif;
  #{$var-prefix}font-family-serif: 'Roboto Slab', serif;
  #{$var-prefix}font-family-mono: 'Roboto Mono', monospace;

  // Default Opacities
  #{$var-prefix}bg-opacity: 1;
  #{$var-prefix}text-opacity: 1;
}

[t="light"], .theme-light {
  @include spread-map($theme-light, #{$var-prefix});
}

[t="dark"], .theme-dark {
  @include spread-map($theme-dark, #{$var-prefix});
}
